        -:    0:Source:/home/gbraxton/workspace/CCGSS/cute/cute_base.h
        -:    0:Graph:Test.gcno
        -:    0:Data:Test.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*********************************************************************************
        -:    2: * This file is part of CUTE.
        -:    3: *
        -:    4: * CUTE is free software: you can redistribute it and/or modify
        -:    5: * it under the terms of the GNU Lesser General Public License as published by
        -:    6: * the Free Software Foundation, either version 3 of the License, or
        -:    7: * (at your option) any later version.
        -:    8: *
        -:    9: * CUTE is distributed in the hope that it will be useful,
        -:   10: * but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   11: * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   12: * GNU Lesser General Public License for more details.
        -:   13: *
        -:   14: * You should have received a copy of the GNU Lesser General Public License
        -:   15: * along with CUTE.  If not, see <http://www.gnu.org/licenses/>.
        -:   16: *
        -:   17: * Copyright 2007-2009 Peter Sommerlad
        -:   18: *
        -:   19: *********************************************************************************/
        -:   20:
        -:   21:#ifndef CUTE_BASE_H_
        -:   22:#define CUTE_BASE_H_
        -:   23:#include <string>
        -:   24:namespace cute{
function _ZN4cute12test_failureD2Ev called 0 returned 0% blocks executed 0%
    #####:   25:	struct test_failure {
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
        -:   26:		std::string reason;
        -:   27:		std::string filename;
        -:   28:		int lineno;
        -:   29:
function _ZN4cute12test_failureC2ERKSsPKci called 0 returned 0% blocks executed 0%
    #####:   30:		test_failure(std::string const &r,char const *f, int line)
    #####:   31:		:reason(r),filename(f),lineno(line)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####:   32:		{ 	}
        -:   33:		char const * what() const { return reason.c_str(); }
        -:   34:	};
        -:   35:}
        -:   36:#define ASSERTM(msg,cond) if (!(cond)) throw cute::test_failure((msg),__FILE__,__LINE__)
        -:   37:#define ASSERT(cond) ASSERTM(#cond,cond)
        -:   38:#define FAIL() ASSERTM("FAIL()",false)
        -:   39:#define FAILM(msg) ASSERTM(msg,false)
        -:   40:#endif /*CUTE_BASE_H_*/
